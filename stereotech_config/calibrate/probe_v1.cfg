[gcode_macro AUTO_WCS_OFFSET_V1]
description: macro do move for measuring and calculated WCS. Sensor DAC_v_1
gcode:
    {% if printer["gcode_button five_axis_module"].state == "PRESSED" %}
        # wcs_1_z
        PROBE_TEMPLATE_POINT POINT=A_Z
        SET_POINT MACRO=SAVE_WCS_CALC_POINT POINT=0
        # wcs_1_y
        PROBE_TEMPLATE_POINT POINT=B_MY_A0_C15
        SET_POINT MACRO=SAVE_WCS_CALC_POINT POINT=7
        PROBE_TEMPLATE_POINT POINT=B_Y_A0_C15
        SET_POINT MACRO=SAVE_WCS_CALC_POINT POINT=1
        # wcs_1_x
        PROBE_TEMPLATE_POINT POINT=C_X
        SET_POINT MACRO=SAVE_WCS_CALC_POINT POINT=2
        PROBE_TEMPLATE_POINT POINT=D_MX
        SET_POINT MACRO=SAVE_WCS_CALC_POINT POINT=3
        # wcs_2_z
        PROBE_TEMPLATE_POINT POINT=A_Z_A90
        SET_POINT MACRO=SAVE_WCS_CALC_POINT POINT=4
        # wcs_2_y
        PROBE_TEMPLATE_POINT POINT=B_Y_A90_C60
        SET_POINT MACRO=SAVE_WCS_CALC_POINT POINT=5
        PROBE_TEMPLATE_POINT POINT=B_MY_A90_C60
        SET_POINT MACRO=SAVE_WCS_CALC_POINT POINT=6
        # calculating wcs
        {% set template_thickness = printer.save_variables.variables.template_thickness|default(10.0)|float %}
        {% set auto_wcs_adj = printer.save_variables.variables.auto_wcs_adj|default(0.25)|float %}
        CALC_WCS_PARAMS THICKNESS={ template_thickness } ADJUSTMENT={ auto_wcs_adj } SENSOR_VERSION=0
    {% endif %}

[gcode_macro ADJUST_BASEMENT_WCS_V1]
gcode:
    {% set wcs = params.WCS|default(0)|int %}
    {% set point = printer.probe.last_result %}
    {% set offsets = printer.probe.offsets %}
    {% set wcs_0 = printer.gcode_move.wcs_offsets[3] %}
    {% set x = point[0] + offsets[0] - printer.gcode_move.homing_origin.x %}
    {% set y = point[1] + offsets[1] - printer.gcode_move.homing_origin.y %}
    {% set z = point[2] - offsets[2] - printer.gcode_move.homing_origin.z %}
    {% set wcs_1 = printer.gcode_move.wcs_offsets[4] %}
    {% set old_z = wcs_0[2] %}
    {% set old_y = wcs_1[1] %}
    {% if wcs == 0 %}
        ; apply measuring for the set wcs_1_z and wcs_2_y(raw).
        G10 L2 P2 Z{z}
        G10 L2 P3 Y{old_y - (z - old_z)}
    {% elif wcs == 1 %}
        ; apply measuring for the set wcs_2_y and wcs_1_z(raw).
        G10 L2 P3 Y{y}
        G10 L2 P2 Z{old_z - (y - old_y)}
    {% endif %}
