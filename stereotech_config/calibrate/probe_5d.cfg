[gcode_macro PROBE_TEMPLATE_POINT]
description: Macro for calibration template probing
variable_a_probe_z: 0.0
variable_a_v_probe_z: 0.0
gcode:
    {% set point = params.POINT|default('A_Z') %}
    {% set offsets = printer.probe.offsets %}
    {% set probe_a_horizontal = printer["gcode_macro CONSTANTS"].probe_a_horizontal %}
    {% set probe_a_vertical = printer["gcode_macro CONSTANTS"].probe_a_vertical %}
    {% set whitelist = ['A_Z', 'B_Z', 'C_Y', 'D_Y'] %}
    {% set a_z = printer['gcode_macro PROBE_TEMPLATE_POINT'].a_probe_z if printer['gcode_macro PROBE_TEMPLATE_POINT'].a_probe_z > 0 else probe_a_horizontal[2] + offsets[2] %}
    {% set a_v_z = printer['gcode_macro PROBE_TEMPLATE_POINT'].a_v_probe_z if printer['gcode_macro PROBE_TEMPLATE_POINT'].a_v_probe_z > 0 else probe_a_vertical[2] + offsets[2] %}
    {% set a = [probe_a_horizontal[0] - offsets[0], probe_a_horizontal[1] - offsets[1], a_z] %}
    {% set a_v = [probe_a_vertical[0] - offsets[0], probe_a_vertical[1] - offsets[1], a_v_z] %}
    {% set max_y = printer.toolhead.axis_maximum[1]|float %}
    #{% set whitelist = ['A_Z', 'A_Z_A0', 'A_Z_A90', 'A_X', 'A_Y', 'A_MX', 'A_MY', 'A_Z_A90', 'A_X_A90', 'A_MX_A90'] %}
    #{% if point in whitelist %}
    {% if point.split('_')|length == 4 %}
        {% set p, ax, a_deg, c_deg = point.split('_') %}
    {% elif point.split('_')|length == 3 %}
        {% set p, ax, a_deg = point.split('_') %}
        {% set c_deg = 'C0' %}
    {% else %}
        {% set p, ax = point.split('_') %}
        {% set a_deg = 'A0' %}
        {% set c_deg = 'C0' %}
    {% endif %}
    {% set target_x = a_v[0] if a_deg == 'A90' else a[0] %}
    {% set target_y = a_v[1] if a_deg == 'A90' else a[1] %}
    {% set target_z = a_v[2] if a_deg == 'A90' else a[2] %}
    {% set target_a = a_deg[1:]|float %}
    {% set target_c = c_deg[1:]|float %}
    {% set safe_distance_z = (probe_a_vertical[2] + 70 + offsets[2]) if a_deg == 'A90' else (probe_a_horizontal[2] + 20 + offsets[2]) %}
    {% set axis = ax[-1] %}
    {% set positive = 0 if (ax[0] == 'M' or ax[0] == 'Z') else 1 %}

    {% if p == 'A' and target_a == 0.0 %}
        {% set target_y = target_y - 4 %}
    {% elif p == 'B' %}
        {% if target_a == 0.0 and target_c == 0.0 %}
            {% set target_y = target_y - 55 %}
        {% elif target_a == 0.0 and target_c == 30.0 %}
            {% set target_x = target_x - 50 %}
        {% elif target_a == 0.0 and target_c == 15.0 %}
            {% set target_x = target_x - 35 %}
            {% set target_y = target_y - 35 %}
        {% elif target_a == 90.0 and target_c == 60.0 %}
            {% set target_z = target_z + 50 %}
        {% endif %}
    {% elif p == 'C' %}
        {% set target_x = target_x - 50 %}
        {% set target_y = target_y - 4 %}
    {% elif p == 'D' %}
        {% set target_x = target_x + 50 %}
        {% set target_y = target_y - 4 %}
    {% endif %}

    {% if ax != 'Z' %}
        {% set target_z = target_z - 6 %}
    {% else %}
        {% set target_z = target_z + 20 %}
    {% endif %}

    {% if ax == 'X' %}
        {% set target_x = target_x - 20 %}
        {% set axis = 'X' %}
    {% elif ax == 'MX' %}
        {% set target_x = target_x + 20 %}
        {% set axis = 'X' %}
    {% elif ax == 'Y' %}
        {% set target_y = target_y - 20 %}
        {% set axis = 'Y' %}
    {% elif ax == 'MY' %}
        {% set target_y = target_y + 20 %}
        {% set axis = 'Y' %}
    {% endif %}
    #{% endif %}
    {% if target_y|float > (max_y - 4.3) %}
       {% set target_y = max_y - 5.5 %}
    {% endif %}
    G0 Z{safe_distance_z} F3600
    G0 A0 C0 F3600
    G0 A{target_a} C{target_c} F3600
    G0 X{target_x} Y{target_y} F3600
    G0 Z{target_z} F3600
    PROBE AXIS={axis} POSITIVE_DIR={positive}
    G0 X{target_x} Y{target_y} F3600
    G0 Z{safe_distance_z} F3600
    G0 A0 C0 F3600

[gcode_macro PROBE_TOOL_POINT]
Description: This macro does movement and measurement relative to the tool.
gcode:
    {% set point = params.POINT|default('A_Z') %}
    {% set offsets = printer.probe.offsets %}
    {% set wcs_1 = printer.gcode_move.wcs_offsets[1] %}
    {% set wcs_2 = printer.gcode_move.wcs_offsets[2] %}
    {% set wcs_4 = printer.gcode_move.wcs_offsets[4] %}
    {% set a = [wcs_1[0] - offsets[0], wcs_1[1] - offsets[1], wcs_1[2] + offsets[2]] %}
    {% set a_v = [wcs_2[0] - offsets[0], wcs_2[1] - offsets[1], wcs_2[2] + offsets[2]] %}
    {% set max_z = printer.toolhead.axis_maximum[2]|float %}
    {% set min_y = printer.toolhead.axis_minimum[1]|float %}
    {% set radius = printer['gcode_macro CALC_TOOL_PARAMS'].radius|float %}
    {% set tool_length = printer['gcode_macro CALC_TOOL_PARAMS'].length|float %}
    {% if tool_length < 35.0 %}
        {action_raise_error('208: Error, tool length not enough, less 35 mm')}
    {% endif %}
    #{% set whitelist = ['A_Z', 'A_X', 'A_Y', 'A_MX', 'A_MY', 'A_Z_A90', 'A_X_A90', 'A_MX_A90'] %}
    #{% if point in whitelist %}
    {% if point.split('_')|length == 4 %}
        {% set p, ax, a_deg, c_deg = point.split('_') %}
    {% elif point.split('_')|length == 3 %}
        {% set p, ax, a_deg = point.split('_') %}
        {% set c_deg = 'C0' %}
    {% else %}
        {% set p, ax = point.split('_') %}
        {% set a_deg = 'A0' %}
        {% set c_deg = 'C0' %}
    {% endif %}
    {% set a_z = a[2] if tool_length != 999.0 else (max_z / 3) * 2 %}
    {% set a_v_y = a_v[1] if tool_length != 999.0 else min_y %}
    {% set a_v_z = a_v[2] + radius if radius != 999.0 else (max_z / 2.0) %}
    {% set target_x = a_v[0] if a_deg == 'A90' else a[0] %}
    {% set target_y = a_v_y if a_deg == 'A90' else a[1] %}
    {% set target_z = a_v_z if a_deg == 'A90' else a_z %}
    {% set target_a = a_deg[1:]|float %}
    {% set target_c = c_deg[1:]|float %}
    {% set axis = ax[-1] %}
    {% set positive = 0 if (ax[0] == 'M' or ax[0] == 'Z') else 1 %}
    {% set safe_distance_z = a_v_z + 20 if a_deg == 'A90' else a_z + 20 %}
    {% if p == 'A' %}
        {% if target_a == 90.0 %}
            {% set target_y = target_y + 2 %}
        {% endif %}
    {% elif p == 'B' %}
        {% if target_a == 90.0 and ax == 'Z' %}
            # {% set target_y = target_y + 25 %}
            {% set target_y = ((wcs_4[1] + 10) - offsets[1]) - 20 %}
        {% elif target_a == 90.0 %}
            # {% set target_y = target_y + 25 %}
            {% set target_y = (wcs_4[1] + 10 - offsets[1]) - 35 %}
        {% endif %}
    {% endif %}
    {% if ax != 'Z' %}
        {% set z = [radius, 10]|min %}
        {% set target_z = target_z - 5 %}
    {% elif ax == 'Z' and radius < 999.0 %}
        {% set target_z = target_z + 20 %}
    {% endif %}
    {% if ax == 'X' %}
        {% set target_x = target_x - (radius + 10) %}
    {% elif ax == 'MX' %}
        {% set target_x = target_x + (radius + 10) %}
    {% elif ax == 'Y' %}
        {% set target_y = (target_y - (radius + 10)) if target_a == 0.0 else (target_y - 20)%}
    {% elif ax == 'MY' %}
        {% set target_y = target_y + (radius + 10) %}
    {% endif %}
    #{% endif %}
    {% if target_a == 90 and printer.toolhead.position[3]|float < 45.0 %}
        G0 A{target_a} C{target_c} F3600
        G0 X{target_x} Y{target_y} F3600
        G0 Z{safe_distance_z} F3600
    {% elif target_a == 0 and printer.toolhead.position[3]|float > 45.0 %}
        G0 Z{safe_distance_z} F3600
    {% endif %}
    G0 A{target_a} C{target_c} F3600
    G0 X{target_x} Y{target_y} F3600
    G0 Z{target_z} F3600
    PROBE AXIS={axis} POSITIVE_DIR={positive}
    G0 X{target_x} Y{target_y} F3600
    G0 Z{safe_distance_z} F3600

[gcode_macro SET_POINT]
gcode:
    {% set macro = params.MACRO %}
    {% set point = params.POINT|default(0) %}
    {% set probe_point = printer.probe.last_result %}
    {% set offsets = printer.probe.offsets %}
    {% set x = probe_point[0] + offsets[0] - printer.gcode_move.homing_origin.x %}
    {% set y = probe_point[1] + offsets[1] - printer.gcode_move.homing_origin.y %}
    {% set z = probe_point[2] - offsets[2] - printer.gcode_move.homing_origin.z %}
    # checking the axes that they are within the allowable range
    {% set home_min = printer.toolhead.axis_minimum %}
    {% set home_max = printer.toolhead.axis_maximum %}
    {% if x < home_min[0] or x > home_max[0] %}
        {action_raise_error('201: axis x=%f out of range (%f - %f)' %  (x, home_min[0], home_max[0]))}
    {% elif y < home_min[1] or y > home_max[1] %}
        {action_raise_error('202: axis y=%f out of range (%f - %f)' %  (y, home_min[1], home_max[1]))}
    {% elif z < home_min[2] or z > home_max[2] %}
        {action_raise_error('203: axis z=%f out of range (%f - %f)' %  (z, home_min[2], home_max[2]))}
    {% endif %}
    {macro} POINT={point} COORDS='{x},{y},{z}'

[gcode_macro RESET_WCS]
gcode:
    {% set wcs_3 = printer.gcode_move.wcs_offsets[3] %}
    {% set wcs_4 = printer.gcode_move.wcs_offsets[4] %}
    G10 L2 P2 X{wcs_3[0]} Y{wcs_3[1]} Z{wcs_3[2]}
    G10 L2 P3 X{wcs_4[0]} Y{wcs_4[1]} Z{wcs_4[2]}
