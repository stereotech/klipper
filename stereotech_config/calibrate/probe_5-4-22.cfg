[probe]
pin: !PG13
samples: 4
samples_tolerance_retries: 1
samples_result: median
lift_speed: 10.0
x_offset: 0.0
y_offset: 0.0
z_offset: 0.0

[bed_mesh]
speed: 120
horizontal_move_z: 50
mesh_min: 20, 20
mesh_max: 261, 245
probe_count: 6, 6
fade_start: 1
fade_end: 10
fade_target: 0
algorithm: bicubic
mesh_pps: 1, 1

[bed_mesh module_3d]
version = 1
points =
         0.0, 0.0, 0.0, 0.0, 0.0, 0.0
         0.0, 0.0, 0.0, 0.0, 0.0, 0.0
         0.0, 0.0, 0.0, 0.0, 0.0, 0.0
         0.0, 0.0, 0.0, 0.0, 0.0, 0.0
         0.0, 0.0, 0.0, 0.0, 0.0, 0.0
         0.0, 0.0, 0.0, 0.0, 0.0, 0.0
x_count = 6
y_count = 6
mesh_x_pps = 1
mesh_y_pps = 1
algo = bicubic
tension = 0.2
min_x = 10.0
max_x = 261.0
min_y = 10.0
max_y = 253.0

[skew_correction]

[b_axis_compensation]

[c_axis_align]

[auto_wcs]

[skew_correction module_3d]
xy_skew = 0.0
xz_skew = 0.0
yz_skew = 0.0

[skew_correction module_5d]
xy_skew = 0.0
xz_skew = 0.0
yz_skew = 0.0

[gcode_macro TEST_PROBE]
gcode:
    QUERY_PROBE
    UPDATE_DELAYED_GCODE ID=test_probe_loop DURATION=1.0

[gcode_macro CANCEL_TEST_PROBE]
gcode:
    UPDATE_DELAYED_GCODE ID=test_probe_loop DURATION=0.0
    {action_respond_info('Abort check loop')}

[delayed_gcode test_probe_loop]
gcode:
    {% if printer["probe"].last_query %}
        UPDATE_DELAYED_GCODE ID=test_probe_loop DURATION=0.0
        {action_respond_info('Probe pressed, abort check loop')}
    {% else %}
        {action_respond_info('Probe not pressed')}
        QUERY_PROBE
        UPDATE_DELAYED_GCODE ID=test_probe_loop DURATION=1.0
    {% endif %}

[gcode_macro SET_PROBE_SENSOR]
description: Set offsets for new sensor and set sensor version.
gcode:
    {% set probe_sensor_version = params.PROBE_VERSION|default(0)|int %}
    {% if probe_sensor_version > 0 %}
        {% set x_offset = -42.0 %}
        {% set y_offset = -33.1 %}
        {% set z_offset = 22.5 %}
    {% else %}
        {% set x_offset = -42.3 %}
        {% set y_offset = -48.14 %}
        {% set z_offset = 20.2 %}
    {% endif %}
    Z_OFFSET_APPLY_PROBE X={x_offset} Y={y_offset} Z={z_offset} FROM_VARS=1
    SAVE_VARIABLE VARIABLE=probe_sensor_version VALUE={probe_sensor_version}
    SAVE_VARIABLE VARIABLE=probe_offset_x VALUE={x_offset}
    SAVE_VARIABLE VARIABLE=probe_offset_y VALUE={y_offset}
    SAVE_VARIABLE VARIABLE=probe_offset_z VALUE={z_offset}
    {action_respond_info("Apply offset for new sensor: x_offset= %s, y_offset= %s, z_offset= %s" % (x_offset, y_offset, z_offset))}

[gcode_macro AUTO_WCS]
description: macro to continue automatic calibration depending on the version of the sensor
gcode:
    {% set probe_sensor_version = printer.save_variables.variables.probe_sensor_version|default(1)|int %}
    {% if probe_sensor_version > 0 %}
        AUTO_WCS_OFFSET_V2
    {% else %}
        AUTO_WCS_OFFSET_V1
    {% endif %}

[gcode_macro AUTO_BASEMENT_WCS]
description: macro do main moves for get wcs for SPIRAL and FULL modes.
gcode:
    {% set wcs = params.WCS|default(0)|int %}
    {% set probe_sensor_version = printer.save_variables.variables.probe_sensor_version|default(0)|int %}
    {% if probe_sensor_version > 0 %}
        AUTO_BASEMENT_WCS_MOVE_V2 WCS={wcs}
    {% else %}
        {% set max_z = printer.toolhead.axis_maximum[2]|float %}
        {% if wcs == 0 %}
            ; move for measuring wcs_1_z
            AUTO_BASEMENT_WCS_MOVE
        {% endif %}
        ; move for measuring wcs_2_y
        PROBE
        G0 Z{max_z / 2.0} F3600
    {% endif %}

[gcode_macro ADJUST_BASEMENT_WCS]
gcode:
    {% set probe_sensor_version = printer.save_variables.variables.probe_sensor_version|default(1)|int %}
    {% if probe_sensor_version > 0 %}
        # pass
    {% else %}
        ADJUST_BASEMENT_WCS_V1 {rawparams}
    {% endif %}
