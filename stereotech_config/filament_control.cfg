[filament_motion_sensor extruder_sensor]
extruder: extruder
detection_length: 14.0
event_delay: 120.0
switch_pin: PG14
pause_on_runout: False
runout_gcode:
    {% if printer.virtual_sdcard.is_active %}
        # 1.Уходим на паузу при срабатывании без выключения нагрева
        # 2.Пробуем продавить 15мм материала
        # 3.1 От ненужного простоя можно избавиться, если поддерживать нагрев в течение 5 минут,
        #           чтобы пользователь быстро устранил засор и снял принтер с паузы.
        # 3.2 Если нет - остаемся на паузе и выключаем нагрев
        # 4.Если продавливается - продолжаем печать
        MY PARAM=1
        SAVE_GCODE_STATE NAME=filament_motion_sensor # save_state
        MY PARAM=2
        MOVE_FOR_SERVICE
        # 1 end
        MY PARAM=3
        # 2
        G1 F200 E20 ;extrude 15 mm of feed stock
        G92 E0 ;zero the extruded length again
        # 3.1
        MY PARAM=4
        GET_STATE_SWITH # create_macros_get_state_switch
        MY PARAM=5
        {% set status = printer['gcode_macro GET_STATE_SWITH'].status_swith|lower %}
        MY PARAM=6
        {% if status == 'true' %}# if ok
            MY PARAM=7
            RESTORE_GCODE_STATE NAME=filament_motion_sensor MOVE=1 # restore
            MY PARAM=8
        {% else %}# else
            MY PARAM=9
            PAUSE TURN_OFF_HEATERS=0
            MY PARAM=10
        {% endif %} 
        MY PARAM=11
        WAIT_CLIENT_ACTION #delayed gcode 300 secs
        MY PARAM=12
        GET_STATE_SWITH # create_macros_get_state_switch
        {% set new_status = printer['gcode_macro GET_STATE_SWITH'].status_swith|lower %}
        MY PARAM=13
        {% if new_status == 'false' %}
            MY PARAM=14
            PAUSE
        {% endif %}
    {% endif %}
    MY PARAM=15
    FILAMENT_ERROR EXTRUDER=extruder

[gcode_macro FILAMENT_ERROR]
gcode:
    {% if params.EXTRUDER == 'extruder' %}
        {action_raise_error('Filament error on Extruder 1')}
    {% else %}
        {action_raise_error('Filament error on Extruder 2')}
    {% endif %}

[gcode_macro SET_FILAMENT_SENSOR]
rename_existing: SET_FILAMENT_SENSOR_OLD
gcode:
    SET_FILAMENT_SENSOR_OLD SENSOR={params.SENSOR} ENABLE={params.ENABLE}
    SAVE_VARIABLE VARIABLE={params.SENSOR} VALUE={params.ENABLE}

[gcode_macro GET_STATE_SWITH]
description: get state motion filament sensor 
variable_status_swith: 0
gcode:
    {% set status = printer['filament_motion_sensor extruder_sensor'].filament_detected %}
    SET_GCODE_VARIABLE MACRO=GET_STATE_SWITH VARIABLE=status_swith VALUE={status}
    { action_respond_info("variable_status_swith =%d" % (status))}

[delayed_gcode WAIT_CLIENT_ACTION]
gcode:
    UPDATE_DELAYED_GCODE ID=WAIT_CLIENT_ACTION DURATION=300

[gcode_macro MOVE_FOR_SERVICE]
description: move in position for service 
variable_status_swith: 0
gcode:
    {% if printer.toolhead.axis_maximum[0] > 250 %}
            {% set x = params.X|default(300) %}
            {% set y = params.Y|default(10) %}
        {% else %}
            {% set x = params.X|default(200) %}
            {% set y = params.Y|default(10) %}
        {% endif %}
        {% set z = params.Z|default(50)|float %}
        {% set e = params.E|default(3) %}
        {% set max_z = printer.toolhead.axis_maximum.z|float %}
        {% set act_z = printer.toolhead.position.z|float %}
        {% set lift_z = z|abs %}
        {% set fan_speed = printer.fan.speed * 255 | int %}
        {% if act_z < (max_z - lift_z) %}
            {% set z_safe = lift_z %}
        {% else %}
            {% set z_safe = max_z - act_z %}
        {% endif %}
        {% if z_safe < 0 %}
            {% set z_safe = 0 %}
        {% endif %}


        {% if printer.probe %}
            {% if printer["gcode_button five_axis_module"].state == "RELEASED" %}
                BED_MESH_CLEAR
            {% else %}
                ;FIVE AXIS COMPENSATION OFF
                ;B_AXIS_COMPENSATION_VARS ENABLE=0
            {% endif %}
        {% endif %}
        G54
        G91
        {% if printer[printer.toolhead.extruder].can_extrude|lower == 'true' %}
            CUT_FIBER
            G1 E-{e} F1200
        {% else %}
            {action_respond_info("Extruder not hot enough")}
        {% endif %}
        {% if "xyz" in printer.toolhead.homed_axes %}
            G1 Z{z_safe}
            G90
            G1 X{x} Y{y} F3600
        {% else %}
            {action_respond_info("Printer not homed")}
        {% endif %}


[gcode_macro MY]
gcode:
    {% set a = params.PARAM %}
    {action_raise_error('\nI em heare %s\n' % a)}
