[probe]
pin: !PG13
samples: 4
samples_tolerance_retries: 1
samples_result: median
lift_speed: 10.0

[bed_mesh]
speed: 120
horizontal_move_z: 50
mesh_min: 20, 20
mesh_max: 261, 245
probe_count: 6, 6
fade_start: 1
fade_end: 10
fade_target: 0
algorithm: bicubic
mesh_pps: 1, 1

[bed_mesh module_3d]
version = 1
points =
         0.0, 0.0, 0.0, 0.0, 0.0, 0.0
         0.0, 0.0, 0.0, 0.0, 0.0, 0.0
         0.0, 0.0, 0.0, 0.0, 0.0, 0.0
         0.0, 0.0, 0.0, 0.0, 0.0, 0.0
         0.0, 0.0, 0.0, 0.0, 0.0, 0.0
         0.0, 0.0, 0.0, 0.0, 0.0, 0.0
x_count = 6
y_count = 6
mesh_x_pps = 1
mesh_y_pps = 1
algo = bicubic
tension = 0.2
min_x = 10.0
max_x = 261.0
min_y = 10.0
max_y = 253.0

[skew_correction]

[b_axis_compensation]

[c_axis_align]

[auto_wcs]

[skew_correction module_3d]
xy_skew = 0.0
xz_skew = 0.0
yz_skew = 0.0

[skew_correction module_5d]
xy_skew = 0.0
xz_skew = 0.0
yz_skew = 0.0

[gcode_macro TEST_PROBE]
gcode:
    QUERY_PROBE
    UPDATE_DELAYED_GCODE ID=test_probe_loop DURATION=1.0

[gcode_macro CANCEL_TEST_PROBE]
gcode:
    UPDATE_DELAYED_GCODE ID=test_probe_loop DURATION=0.0
    {action_respond_info('Abort check loop')}

[delayed_gcode test_probe_loop]
gcode:
    {% if printer["probe"].last_query %}
        UPDATE_DELAYED_GCODE ID=test_probe_loop DURATION=0.0
        {action_respond_info('Probe pressed, abort check loop')}
    {% else %}
        {action_respond_info('Probe not pressed')}
        QUERY_PROBE
        UPDATE_DELAYED_GCODE ID=test_probe_loop DURATION=1.0
    {% endif %}

[gcode_macro CALIBRATE_MODULE_THREE_D]
description: 3D module calibration
gcode:
    {% if printer["gcode_button five_axis_module"].state == "RELEASED" %}
        G0 X197 Y195 F6000
        G0 Z40 F3600
        PROBE
        G91
        G0 Z30 F3600
        G90
        MODULE_THREE_D_MESH_CALIBRATE
	    G91
        G0 Z30 F3600
        G90
	    G0 X150 Y50 F3600
    {% endif %}

[gcode_macro MODULE_THREE_D_MESH_CALIBRATE]
description: 3D module calibration
gcode:
    {% if printer["gcode_button five_axis_module"].state == "RELEASED" %}
        Z_OFFSET_APPLY_PROBE Z={printer.probe.last_result[2]}
        BED_MESH_CALIBRATE PROFILE=module_3d
        BED_MESH_CLEAR
    {% endif %}

[gcode_macro SET_POINT]
gcode:
    {% set macro = params.MACRO %}
    {% set point = params.POINT|default(0) %}
    {% set probe_point = printer.probe.last_result %}
    {% set offsets = printer.probe.offsets %}
    {% set x = probe_point[0] + offsets[0] - printer.gcode_move.homing_origin.x %}
    {% set y = probe_point[1] + offsets[1] - printer.gcode_move.homing_origin.y %}
    {% set z = probe_point[2] - offsets[2] - printer.gcode_move.homing_origin.z %}
    # checking the axes that they are within the allowable range
    {% set home_min = printer.toolhead.axis_minimum %}
    {% set home_max = printer.toolhead.axis_maximum %}
    {% if x < home_min[0] or x > home_max[0] %}
        {action_raise_error('201: axis x=%f out of range (%f - %f)' %  (x, home_min[0], home_max[0]))}
    {% elif y < home_min[1] or y > home_max[1] %}
        {action_raise_error('202: axis y=%f out of range (%f - %f)' %  (y, home_min[1], home_max[1]))}
    {% elif z < home_min[2] or z > home_max[2] %}
        {action_raise_error('203: axis z=%f out of range (%f - %f)' %  (z, home_min[2], home_max[2]))}
    {% endif %}
    {macro} POINT={point} COORDS='{x},{y},{z}'

[gcode_macro SET_SKEW_COMPENSATION_POINT]
description: saved value about probe for align skew
gcode:
    {% set point = printer.probe.last_result %}
    {% set offsets = printer.probe.offsets %}
    {% set x = point[0] + offsets[0] - printer.gcode_move.homing_origin.x %}
    {% set y = point[1] + offsets[1] - printer.gcode_move.homing_origin.y %}
    {% set z = point[2] - offsets[2] - printer.gcode_move.homing_origin.z %}
    {% set index = params.POINT|default(0) %}
    SAVE_SKEW_POINT POINT={index} COORDS='{x},{y},{z}'
