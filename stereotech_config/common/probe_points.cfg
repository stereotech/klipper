[gcode_macro ADJUST_TEMPLATE_HEIGHT]
gcode:
    {% set a = params.A|default(0)|int %}
    {% if a in [0, 90] %}
        PROBE_TEMPLATE_POINT POINT={"A_Z_A" ~ a}
        SET_TEMPLATE_HEIGHT A={a}
    {% endif %}

[gcode_macro SET_TEMPLATE_HEIGHT]
gcode:
    {% set a = params.A|default(0)|int %}
    {% set v = 'v_' if a == 90 else '' %}
    SET_GCODE_VARIABLE MACRO=PROBE_TEMPLATE_POINT VARIABLE={"a_" ~ v ~"probe_z"} VALUE={printer.probe.last_result[2] - printer.gcode_move.homing_origin.z}

[gcode_macro SET_POINT]
gcode:
    {% set macro = params.MACRO %}
    {% set point = params.POINT|default(0) %}
    {% set probe_point = printer.probe.last_result %}
    {% set offsets = printer.probe.offsets %}
    {% set x = probe_point[0] + offsets[0] - printer.gcode_move.homing_origin.x %}
    {% set y = probe_point[1] + offsets[1] - printer.gcode_move.homing_origin.y %}
    {% set z = probe_point[2] - offsets[2] - printer.gcode_move.homing_origin.z %}
    # checking the axes that they are within the allowable range
    {% set home_min = printer.toolhead.axis_minimum %}
    {% set home_max = printer.toolhead.axis_maximum %}
    {% if x < home_min[0] or x > home_max[0] %}
        {action_raise_error('201: axis x=%f out of range (%f - %f)' %  (x, home_min[0], home_max[0]))}
    {% elif y < home_min[1] or y > home_max[1] %}
        {action_raise_error('202: axis y=%f out of range (%f - %f)' %  (y, home_min[1], home_max[1]))}
    {% elif z < home_min[2] or z > home_max[2] %}
        {action_raise_error('203: axis z=%f out of range (%f - %f)' %  (z, home_min[2], home_max[2]))}
    {% endif %}
    {macro} POINT={point} COORDS='{x},{y},{z}'

[gcode_macro PROBE_TEMPLATE_POINT]
description: Macro for calibration template probing
variable_a_probe_z: 0.0
variable_a_v_probe_z: 0.0
gcode:
    {% set point = params.POINT|default('A_Z') %}
    {% set offsets = printer.probe.offsets %}
    {% set probe_a_horizontal = printer["gcode_macro CONSTANTS"].probe_a_horizontal %}
    {% set probe_a_vertical = printer["gcode_macro CONSTANTS"].probe_a_vertical %}
    {% set whitelist = ['A_Z', 'B_Z', 'C_Y', 'D_Y'] %}
    {% set a = [probe_a_horizontal[0] - offsets[0], probe_a_horizontal[1] - offsets[1], probe_a_horizontal[2]] %}
    {% set a_v = [probe_a_vertical[0] - offsets[0], probe_a_vertical[1] - offsets[1], probe_a_vertical[2]] %}
    {% set a_z = printer['gcode_macro PROBE_TEMPLATE_POINT'].a_probe_z %}
    {% set a_v_z = printer['gcode_macro PROBE_TEMPLATE_POINT'].a_v_probe_z %}
    {% set max_z = [a_z, a_v_z, a_v[2], a[2]]|max %}
    {% set max_y = printer.toolhead.axis_maximum[1]|float %}
    {% if a[1] > (max_y - 6.0) %}
        {% set a = [probe_a_horizontal[0] - offsets[0], probe_a_horizontal - 6.0, probe_a_horizontal[2]] %}
    {% endif %}
    {% if point in whitelist %}
        G0 Z{max_z} F3600
        G0 A0 C0 F3600
        {% set p, ax, a_deg, c_deg = point.split('_') %}
        {% set target_x = a_v[0] if a_deg == 'A90' else a[0] %}
        {% set target_y = a_v[1] if a_deg == 'A90' else a[1] %}
        {% set target_z = max_z %}
        {% set target_a = 0.0 %}
        {% set target_c = 0.0 %}
        {% set axis = 'Z' %}
        {% set positive = 0 %}
         {% if a_deg == 'A90' %}
            {% set target_a = 90.0 %}
        {% endif %}
        {% if c_deg == 'C60' %}
            {% set target_c = 60.0 %}
        {% elif c_deg == 'C30' %}
            {% set target_c = 30.0 %}
        {% elif c_deg == 'C15' %} #legacy probing
            {% set target_c = 15.0 %}
        {% endif %}
        {% if p == 'A' %}
            {% set target_y = target_y - 4 %}
        {% elif p == 'B' %}
            {% if target_a == 0.0 and target_c == 0.0 %}
                {% set target_y = target_y - 50 %}
            {% elif target_a == 0.0 and target_c == 30.0 %}
                {% set target_x = target_x - 50 %}
            {% elif target_a == 0.0 and target_c == 15.0 %}
                {% set target_x = target_x - 35 %}
                {% set target_y = target_y - 35 %}
            {% elif target_a == 90.0 and target_c == 60.0 %}
                {% set target_z = target_z + 70 %}
            {% endif %}
        {% elif p == 'C' %}
            {% set target_x = target_x - 50 %}
            {% set target_y = target_y - 4 %}
        {% elif p == 'D' %}
            {% set target_x = target_x + 50 %}
            {% set target_y = target_y - 4 %}
        {% endif %}
        {% if ax != 'Z' %}
            {% set target_z = target_z - 6 %}
        {% endif %}
        {% if ax == 'X' %}
            {% set target_x = target_x - 20 %}
            {% set axis = 'X' %}
            {% set positive = 1 %}
        {% elif ax == 'MX' %}
            {% set target_x = target_x + 20 %}
            {% set axis = 'X' %}
        {% elif ax == 'Y' %}
            {% set target_y = target_y - 20 %}
            {% set axis = 'Y' %}
            {% set positive = 1 %}
        {% elif ax == 'MY' %}
            {% set target_y = target_y + 20 %}
            {% set axis = 'Y' %}
        {% endif %}
    {% endif %}
    {% if target_y|float > (max_y - 4.3) %}
       {% set target_y = max_y - 4.3 %}
    {% endif %}
    G0 A{target_a} C{target_c} F3600
    G0 X{target_x} Y{target_y} F3600
    G0 Z{target_z} F3600
    PROBE AXIS={axis} POSITIVE_DIR={positive}
    G0 X{target_x} Y{target_y} F3600
    G0 Z{target_z} F3600
    G0 Z120 F3600
    G0 A0 C0 F3600

[gcode_macro ALIGN_C_AXIS]
description: align template along axis x
variable_repeat: 2
gcode:
    {% set repeat = printer["gcode_macro ALIGN_C_AXIS"].repeat %}
    {% for idx in range(repeat) %}
        PROBE_TEMPLATE_POINT POINT=C_Y
        SET_POINT MACRO=SAVE_C_AXIS_POINT POINT=0
        PROBE_TEMPLATE_POINT POINT=D_Y
        SET_POINT MACRO=SAVE_C_AXIS_POINT POINT=1
        CALC_C_AXIS_ALIGN
    {% endfor %}

[gcode_macro ALIGN_A_AXIS]
description: align template along horizontal plane
variable_repeat: 2
gcode:
    {% set repeat = printer["gcode_macro ALIGN_A_AXIS"].repeat %}
    {% for idx in range(repeat) %}
        PROBE_TEMPLATE_POINT POINT=A_Z
        SET_POINT MACRO=SAVE_A_AXIS_POINT POINT=0
        PROBE_TEMPLATE_POINT POINT=B_Z
        SET_POINT MACRO=SAVE_A_AXIS_POINT POINT=1
        CALC_A_AXIS_OFFSET
    {% endfor %}

[gcode_macro CALIBRATE_MODULE_FIVE_D]
description: macro for get first point to auto calibrate 5d and align teamplate
gcode:
    {% if printer["gcode_button five_axis_module"].state == "PRESSED" %}
        G28 A
        M204 S500
        G0 C0.1
        G0 C0
        ADJUST_TEMPLATE_HEIGHT A=0
        ALIGN_C_AXIS
        ALIGN_A_AXIS
        ADJUST_TEMPLATE_HEIGHT A=0
        ADJUST_TEMPLATE_HEIGHT A=90
        ALIGN_C_AXIS
        AUTO_WCS
        ALIGN_C_AXIS
        MOVE_TO_AUTO_WCS
        M204 S1500
    {% endif %}