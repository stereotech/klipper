[gcode_macro PROBE_TOOL_POINT]
Description: This macro does movement and measurement relative to the tool.
gcode:
    {% set point = params.POINT|default('A_Z') %}
    {% set offsets = printer.probe.offsets %}
    {% set wcs_1 = printer.gcode_move.wcs_offsets[1] %}
    {% set wcs_2 = printer.gcode_move.wcs_offsets[2] %}
    {% set a = [wcs_1[0] - offsets[0], wcs_1[1] - offsets[1], wcs_1[2] + offsets[2]] %}
    {% set a_v = [wcs_2[0] - offsets[0], wcs_2[1] - offsets[1], wcs_2[2] + offsets[2]] %}
    {% set max_z = printer.toolhead.axis_maximum[2]|float %}
    {% set min_y = printer.toolhead.axis_minimum[1]|float %}
    {% set radius = printer.auto_wcs.tooling_radius|default(999.0)|float %}
    {% set tool_length = printer['gcode_macro GET_TOOL_LENGTH'].tool_length|default(999.0)|float %}
    {% if tool_length < 35.0 %}
        {action_raise_error('208: Error, tool length not enough, less 35 mm')}
    {% endif %}
    {% set whitelist = ['A_Z', 'A_X', 'A_Y', 'A_MX', 'A_MY'] %}
    {% if point in whitelist %}
        {% set p, ax, a_deg, c_deg = point.split('_') %}
        {% set target_x = a_v[0] if a_deg == 'A90' else a[0] %}

        {% set a_v_y = [a_v[1] - (tool_length + 10), min_y]|max %}
        {% set target_y = a_v_y if a_deg == 'A90' else a[1] %}

        {% set a_z = [a[2] + tool_length + 10, max_z]|min %}
        {% set a_v_z = [a_v[2] + radius + 10, max_z / 2.0]|min %}
        {% set target_z = a_v_z if a_deg == 'A90' else a_z %}

        {% set target_a = 0.0 %}
        {% set target_c = 0.0 %}
        {% set axis = 'Z' %}
        {% set positive = 0 %}
        {% if a_deg == 'A90' %}
            {% set target_a = 90.0 %}
        {% endif %}
        {% if c_deg == 'C60' %}
            {% set target_c = 60.0 %}
        {% endif %}
        {% if p == 'A' %}
            {% if target_a == 90.0 %}
                {% set target_y = target_y + 1 %}
            {% endif %}
        {% elif p == 'B' %}
            {% if target_a == 90.0 %}
                {% set target_y = target_y + 25 %}
            {% endif %}
        {% endif %}
        {% if ax != 'Z' %}
            {% set z = [radius, 10]|min %}
            {% set target_z = target_z - z %}
        {% endif %}
        {% if ax == 'X' %}
            {% set target_x = target_x - (radius + 10) %}
            {% set axis = 'X' %}
            {% set positive = 1 %}
        {% elif ax == 'MX' %}
            {% set target_x = target_x + (radius + 10) %}
            {% set axis = 'X' %}
        {% elif ax == 'Y' %}
             {% if target_a == 0.0 %}
                {% set target_y = target_y - (radius + 10) %}
            {% endif %}
            {% set axis = 'Y' %}
            {% set positive = 1 %}
        {% elif ax == 'MY' %}
            {% set target_y = target_y + (radius + 10) %}
            {% set axis = 'Y' %}
        {% endif %}
    {% endif %}
    G0 A{target_a} C{target_c} F3600
    G0 X{target_x} Y{target_y} F3600
    G0 Z{target_z} F3600
    PROBE AXIS={axis} POSITIVE_DIR={positive}
    G0 X{target_x} Y{target_y} F3600
    G0 Z{target_z} F3600

[gcode_macro AUTO_BASEMENT_WCS_MOVE]
description: This macro does a move for measuring wcs_1_z and wcs_2_y-raw mode FULL wcs_2_y and wcs_1_z-raw mode SPIRAL.
gcode:
    {% set wcs = params.WCS|default(0)|int %}
    {% set offsets = printer.probe.offsets %}
    {% set wcs_offsets = printer.gcode_move.wcs_offsets[wcs + 3] %}
    {% set x = wcs_offsets[0] - offsets[0] %}
    {% set y = wcs_offsets[1] - offsets[1] %}
    {% set z = wcs_offsets[2] + offsets[2] %}
    {% set a = '0' if wcs == 0 else '90' %}
    G28 A
    G0 A{a} F3600
    G0 Z150 F3600
    G0 X{x} Y{y} F3600
