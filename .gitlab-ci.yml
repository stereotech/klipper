default:
  image: python:2.7.18-slim-buster
  tags:
    - linux

stages:          # List of stages for jobs, and their order of execution
  - build
  - test
  - deploy


build-job:       # This job runs in the build stage, which runs first.
  stage: build
  before_script:
    - apt-get update
    - apt-get install -y git curl
  script:
    - ./scripts/ci-install.sh
    - ./ci_build/python-env/bin/pip freeze --all > requirements.txt
    - pip download -r requirements.txt -d packages --python-version 27 --platform manylinux2014 --no-deps
    - ./scripts/ci-build-stereotech.sh
    - ./ci_build/python-env/bin/python ./klippy/chelper/__init__.py
    - mkdir dist
    - cp -R ./klippy/. ./dist/klippy
    - cp -R ./stereotech_config/. ./dist/config
    - cp -R ./ci_build/firmware/. ./dist/firmware
    - cp -R ./packages/. ./dist/packages
    - cp ./requirements.txt ./dist/requirements.txt
    - tar -cvjf klipper.tar.bz2 -C dist .
  artifacts:
    name: klipper
    paths:
      - "klipper.tar.bz2"
    expire_in: 7 days

test-job:
  stage: build
  script:
    - ./scripts/ci-install.sh
    - ./scripts/ci-build.sh 2>&1
  artifacts:
    name: data-dict
    paths:
      - "ci_build/dict"
    expire_in: 7 days

deploy_job:
  stage: deploy
  needs:
    - build-job
    - test-job
  variables:
    RELEASE_TYPE: testing
  before_script:
    - pip install awscli
  script:
    - aws s3 --endpoint-url=https://storage.yandexcloud.net cp klipper.tar.bz2 s3://${BUCKET_NAME}/firmware_v5/${RELEASE_TYPE}/ --acl public-read
    - touch klipper.sha
    - echo "$CI_COMMIT_SHA" >> ./klipper.sha
    - aws s3 --endpoint-url=https://storage.yandexcloud.net cp klipper.sha s3://${BUCKET_NAME}/firmware_v5/${RELEASE_TYPE}/ --acl public-read

